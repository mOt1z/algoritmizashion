class Hotel:

    def __init__(self, name):
        self.name = name
        self.rooms = {
            100: True, 101: True, 102: True, 103: True,
            200: True, 201: True, 202: True, 203: True
        }

    def print_rooms(self):
        print(self.name)
        for room, available in self.rooms.items():
            status = "свободен" if available else "занят"
            print(f"Номер № {room} {status}")

    def book_room_by_number(self, room_number):
        if room_number not in self.rooms:
            print("Ошибка! Такого номера нет.")
        elif not self.rooms[room_number]:
            print(f"Номер {room_number} уже забронирован.")
        else:
            self.rooms[room_number] = False
            print(f"Номер {room_number} успешно забронирован.")

    def finish_number_by_number(self, room_number):
        if room_number not in self.rooms:
            print("Ошибка! Такого номера нет.")
        elif self.rooms[room_number]:
            print(f"Номер {room_number} не забронирован.")
        else:
            self.rooms[room_number] = True
            print(f"Бронь номера {room_number} успешно снята.")


hotel = Hotel("Отель: У Олега")

while True:
    print("\n[1] - Вывести занятость всех номеров")
    print("[2] - Занять номер")
    print("[3] - Снять бронь с номера")
    print("[4] - Выход")
    
    choice = input("> ")
    
    if choice == '1':
        hotel.print_rooms()
    
    elif choice == '2':
        try:
            room_number = int(input("Введите номер комнаты для брони: "))
            hotel.book_room_by_number(room_number)
        except ValueError:
            print("Ошибка. Введите номер комнаты.")

    elif choice == '3':
        try:
            room_number = int(input("Введите номер комнаты для отмены брони: "))
            hotel.finish_number_by_number(room_number)
        except ValueError:
            print("Ошибка. Введите номер комнаты.")

    elif choice == '4':
        print("Выход из программы.")
        break
    
    else:
        print("Такого варианта нет.")
